#!/bin/bash

VERT="\\033[1;32m"
NORMAL="\\033[0;39m"
ROUGE="\\033[1;31m"
ROSE="\\033[1;35m"
BLEU="\\033[1;34m"
BLANC="\\033[0;02m"
BLANCLAIR="\\033[1;08m"
JAUNE="\\033[1;33m"
CYAN="\\033[1;36m"


FIGLETCMD=figlet
TOILETCMD=toilet
COWSAYCMD=/usr/games/cowsay

function print {
        echo -e "${ROSE}$1${NORMAL}"
}

function jaune {
        echo -e "${JAUNE}$1${NORMAL}"
}
function bleu {
	echo -e "${BLEU}$1${NORMAL}"
}
function cyan {
        echo -e "${CYAN}$1${NORMAL}"
}

function rouge {
	echo -e "${ROUGE}$1${NORMAL}"
}
function vert {
	echo -e "${VERT}$1${NORMAL}"
}



function barre {
	printf '.%.0s' {1..80}
	printf '\n'
	#echo -e "--------------------------------"
}

function encadre {

	if which $TOILETCMD >/dev/null; then
		toiletheader "$1"
	elif which $FIGLETCMD >/dev/null; then
		figletheader "$1"
	elif which $COWSAYCMD >/dev/null; then
		cowsayheader "$1"
	else

		echo -e ${ROSE}
		barre
		echo -e $1
		barre
		echo -e ${NORMAL}
	fi
}


function toiletheader {
	$TOILETCMD -f pagga -F border -F gay $1
}

function figletheader {
	$FIGLETCMD $1
}

function cowsayheader {
	$COWSAYCMD $1
}

function toilettiny {
	$TOILETCMD -f digital -F crop $1
}


function fn_commande {
	echo -e "$1"
	$1
}

function commanded {
	echo -e "$1"
}

function info {
	jaune $1
}

function fn_usage_line {
  echo -e "${NORMAL}$1${CYAN}$2${NORMAL}"
}

function fn_command_script_edit {

  ROOT_DIR=$1
  AVAILABLE_DIR=$2
  ENABLED_DIR=$3
  SCRIPT_NAME=$4

  TEST_AVAILABLE="${ROOT_DIR}/${AVAILABLE_DIR}/${SCRIPT_NAME}"

  #Test available
  if [[ ! -f "${TEST_AVAILABLE}" ]]
  then
          rouge "Le script ${TEST_AVAILABLE} n'éxiste pas !"
          exit -1
  fi

  fn_commande "nano ${TEST_AVAILABLE}"
}

function fn_command_script_show {

  ROOT_DIR=$1
  AVAILABLE_DIR=$2
  ENABLED_DIR=$3
  SCRIPT_NAME=$4

  TEST_AVAILABLE="${ROOT_DIR}/${AVAILABLE_DIR}/${SCRIPT_NAME}"

  #Test available
  if [[ ! -f "${TEST_AVAILABLE}" ]]
  then
          rouge "Le script ${TEST_AVAILABLE} n'éxiste pas !"
          exit -1
  fi

  fn_commande "cat ${TEST_AVAILABLE}"
}


#Lien symbolique script $type-available/$script $type-enabled/script
function fn_command_script_enable {
        ROOT_DIR=$1
        AVAILABLE_DIR=$2
        ENABLED_DIR=$3
        SCRIPT_NAME=$4

        #ROOT_DIR=/root/my-proxmox-scripts
        #AVAILABLE_DIR=rezo.d/rezo-available
        #ENABLED_DIR=rezo.d/rezo-enabled
        #SCRIPT_NAME=net100

        TEST_AVAILABLE="${ROOT_DIR}/${AVAILABLE_DIR}/${SCRIPT_NAME}"
        TEST_ENABLED="${ROOT_DIR}/${ENABLED_DIR}/${SCRIPT_NAME}"

        #Test already enabled
        if [[ -f "${TEST_ENABLED}" ]]
        then
                jaune "Le script est déjà actif"
                exit 0
        fi

        #Test available
        if [[ ! -f "${TEST_AVAILABLE}" ]]
        then
                rouge "Le script ${TEST_AVAILABLE} n'éxiste pas !"
                exit -1
        fi

        echo -e "Création du lien symbolique ${CYAN}${TEST_ENABLED}${NORMAL} vers ${CYAN}${TEST_AVAILABLE}${NORMAL}"
        #TODO

        fn_commande "ln -sf ${TEST_AVAILABLE} ${TEST_ENABLED}"
        if [[ $? -eq 0 ]]
        then
                vert "Script ${SCRIPT_NAME} activé :-)"
        else
                rouge "Erreur lors de l'activation du script :-("
        fi
}

#Suppression lien symbolique script $type-available/$script $type-enabled/script
function fn_command_script_disable {
	ROOT_DIR=$1
	AVAILABLE_DIR=$2
	ENABLED_DIR=$3
	SCRIPT_NAME=$4

	#ROOT_DIR=/root/my-proxmox-scripts
	#AVAILABLE_DIR=rezo.d/rezo-available
	#ENABLED_DIR=rezo.d/rezo-enabled
	#SCRIPT_NAME=net100

	TEST_AVAILABLE="${ROOT_DIR}/${AVAILABLE_DIR}/${SCRIPT_NAME}"
	TEST_ENABLED="${ROOT_DIR}/${ENABLED_DIR}/${SCRIPT_NAME}"

	#Test already enabled
	if [[ ! -f "${TEST_ENABLED}" ]]
	then
		jaune "Le script n'est pas actif"
		exit 0
	fi

	#Test available
	if [[ ! -f "${TEST_AVAILABLE}" ]]
	then
		rouge "Le script ${TEST_AVAILABLE} n'éxiste pas !"
		exit -1
	fi

	echo -e "Suppression lien symbolique ${CYAN}${TEST_ENABLED}${NORMAL}"

	fn_commande "rm ${TEST_ENABLED}"
	if [[ $? -eq 0 ]]
	then
		vert "Script ${SCRIPT_NAME} désactivé :-)"
	else
		rouge "Erreur lors de désactivation du script :-("
	fi
}
