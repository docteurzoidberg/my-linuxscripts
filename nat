#!/bin/bash
SCRIPTS_PATH="/root/my-proxmox-scripts"
FOLDER_ENABLED="nat.d/nat-enabled"
FOLDER_AVAILABLE="nat.d/nat-available"
SCRIPT_PREFIX="vm"
VERSION='1.1'
#--------------------------------------

cd $SCRIPTS_PATH

. ./config
. ./functions

encadre "nat script v$VERSION"

#--------------------------------------
# usage
#--------------------------------------

function usage {

	jaune "Utilisation: "

	echo -e "./nat {ID} enable \t ${CYAN}Active le script nat {ID}${NORMAL}"
	echo -e "./nat {ID} disable \t ${CYAN}Désactive le script nat {ID}${NORMAL}"
	echo -e "./nat {ID} edit \t ${CYAN}Edite le script nat {ID}${NORMAL}"
	echo -e "./nat {ID} show \t ${CYAN}Affiche le script nat {ID}${NORMAL}"
	echo -e "./nat apply \t\t ${CYAN}Lance les scripts nat${NORMAL}"
	echo -e "./nat show \t\t ${CYAN}Affiche la table nat iptables en cours${NORMAL}"
	echo -e "./nat scripts \t\t ${CYAN}Affiche les scripts nats actifs${NORMAL}"
}

#--------------------------------------
# internal_*
#--------------------------------------

#Ajoute une regle dans iptables (table nat)
function internal_add_nat {
   	cmdnat="iptables -t nat -A PREROUTING -p $2 -d $3 --dport $4 -i vmbr0 -j DNAT --to-destination $5:$6"
	echo -e "${CYAN}$1 ($2)${NORMAL}: ${cmdnat}"
	${cmdnat}
}

#Parse un fichier de config type nat.conf
function internal_parse_nat {

	# Epuration du ficheir de configuration
	cat $1 | grep -v "^\s*#" | grep -v "^\s*$" |sed -e 's/^\s*//g' > /tmp/nat.$$.txt

	touch /tmp/nat.$$.out

	while read line
	do
		eval echo "$line" >> /tmp/nat.$$.out
	done < /tmp/nat.$$.txt

	#cat /tmp/nat.$$.out

	while IFS=:- read label mode ipout portout ipin portin
	do
		internal_add_nat $label $mode $ipout $portout $ipin $portin
	done < /tmp/nat.$$.out

	rm /tmp/nat.$$.txt
	rm /tmp/nat.$$.out

}

#--------------------------------------
# commande_*
#--------------------------------------

function commande_apply {
  echo
  jaune "Applique les règles nat: "
  echo
	#Pour chaque fichier de config dans nat.d
	for natscript in ${SCRIPTS_PATH}/${FOLDER_ENABLED}/*; do
		if [ -f ${natscript} ]
		then
			rouge "(*) ${natscript}" | sed -e "s,${SCRIPTS_PATH}/${FOLDER_ENABLED}/,,g"
    	internal_parse_nat "${natscript}"
		fi
	done;
}

function commande_reset {
  echo "TODO: commande reset"
}

function commande_show {
  echo
  jaune "Tables nat en cours: "
  echo
  fn_commande "iptables -t nat -L"
}

function commande_scripts {
	echo -e
	jaune "Règles nat actives: "
	echo -e

	#Pour chaque fichier de config dans nat.d
        for natscript in ${SCRIPTS_PATH}/${FOLDER_ENABLED}/*; do
                if [ -f ${natscript} ]
                then
                        rouge "(*) ${natscript}" | sed -e "s,${SCRIPTS_PATH}/${FOLDER_ENABLED}/,,g"
	        fi
	done;

}

#--------------------------------------
# commande_scriptname_*
#--------------------------------------

function commande_scriptname_enable {
    if [[ ! -d $SCRIPTS_PATH/$FOLDER_ENABLED ]]
    then
      commande "mkdir $SCRIPTS_PATH/$FOLDER_ENABLED"
    fi
    fn_command_script_enable $SCRIPTS_PATH $FOLDER_AVAILABLE $FOLDER_ENABLED "${SCRIPT_PREFIX}$1"
}

function commande_scriptname_disable {
	fn_command_script_disable $SCRIPTS_PATH $FOLDER_AVAILABLE $FOLDER_ENABLED "${SCRIPT_PREFIX}$1"
}

function commande_scriptname_edit {
  	fn_command_script_edit $SCRIPTS_PATH $FOLDER_AVAILABLE $FOLDER_ENABLED "${SCRIPT_PREFIX}$1"
}

function commande_scriptname_show {
  	fn_command_script_show $SCRIPTS_PATH $FOLDER_AVAILABLE $FOLDER_ENABLED "${SCRIPT_PREFIX}$1"
}

#--------------------------------------
# parse_*
#--------------------------------------

function parse_commande_scriptname {

	case $2 in
	"enable")
    commande_scriptname_enable $1
  	;;
	"disable")
    commande_scriptname_disable $1
    ;;
  "show")
    commande_scriptname_show $1
    ;;
  "edit")
    commande_scriptname_edit $1
    ;;
	*)
  	if [[ ! -z $2 ]]
  	then
			rouge "Commande inconnue: $2"
  	fi
		usage
		;;
	esac
}

function parse_commande {

  case $1 in
  "apply")
    commande_apply
  	;;
  "reset")
  	commande_reset
  	;;
  "show")
    commande_show
  	;;
  "scripts")
    commande_scripts
	;;
  *)
    parse_commande_scriptname $1 $2 $3
  	;;
  esac

}

#--------------------------------------
# MAIN !
#--------------------------------------

parse_commande $1 $2
